import * as XLSX from 'xlsx';
import * as path from 'path';
import * as fs from 'fs';

// ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON
const loadExcelFile = (filePath: string) => {
    const buffer = fs.readFileSync(filePath);
    const workbook = XLSX.read(buffer, { type: 'buffer' });
    return XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]]);
};

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå
const provinceFilePath = path.join(__dirname, '../data/L_PROVINCE.xlsx');
const catmFilePath = path.join(__dirname, '../data/L_CATM.xlsx');

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
const provinceData = loadExcelFile(provinceFilePath);
export const provinceMap: Record<string, string> = {};
provinceData.forEach((row: any) => {
    provinceMap[row.PROVINCE_ID] = row.PROVINCE_NAME;
});

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡∏ö‡∏• ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
const catmData = loadExcelFile(catmFilePath);
export const districtMap: Record<string, string> = {};
export const subdistrictMap: Record<string, string> = {};

catmData.forEach((row: any) => {
    districtMap[row.CATM] = row.AMPHUR_NAME;  // ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ -> ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
    subdistrictMap[row.CATM] = row.TUMBON_NAME; // ‡∏£‡∏´‡∏±‡∏™‡∏ï‡∏≥‡∏ö‡∏• -> ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡∏ö‡∏•
});

// üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠
export const getProvinceName = (provinceId: string) => provinceMap[provinceId] || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
export const getDistrictName = (districtId: string) => districtMap[districtId] || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
export const getSubdistrictName = (subdistrictId: string) => subdistrictMap[subdistrictId] || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';

console.log('üìå Province, District, Subdistrict data loaded successfully!');
